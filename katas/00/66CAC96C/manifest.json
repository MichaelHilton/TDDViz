{"created":[2014,1,24,16,52,55],"id":"0066CAC96C","browser":"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.76 Safari/537.36","language":"Python","exercise":"Recently_Used_List","unit_test_framework":"python_unittest","tab_size":4,"visible_files":{"untitled.py":"class Untitled:\n\n    def answer(self):\n        return 42\n\n","test_untitled.py":"import untitled\nimport unittest\n\nclass TestUntitled(unittest.TestCase):\n\n    def test_str(self):\n        '''simple example to start you off'''\n        obj = untitled.Untitled()\n        self.assertEqual(6 * 9, obj.answer())\n\n\nif __name__ == '__main__':\n    unittest.main()\n","cyber-dojo.sh":"python *test*.py\n","output":"","instructions":"Develop a recently-used-list class to hold strings \nuniquely in Last-In-First-Out order.\n\no) A recently-used-list is initially empty.\n\no) The most recently added item is first, the least\n   recently added item is last.\n\no) Items can be looked up by index, which counts from zero.\n\no) Items in the list are unique, so duplicate insertions\n   are moved rather than added.\n\nOptional extras\n\no) Null insertions (empty strings) are not allowed.\n\no) A bounded capacity can be specified, so there is an upper\n   limit to the number of items contained, with the least\n   recently added items dropped on overflow.\n\n\n"}}