{"created":[2014,5,28,13,14,46],"id":"003BA39003","language":"Java-1.8_JUnit","exercise":"Reversi","unit_test_framework":"junit","tab_size":4,"visible_files":{"Untitled.java":"\npublic class Untitled {\n    \n    public static int answer() {\n        return 42;\n    }\n}\n","UntitledTest.java":"import org.junit.*;\nimport static org.junit.Assert.*;\n\npublic class UntitledTest {\n    \n    @Test\n    public void hitch_hiker() {\n        int expected = 6 * 9;\n        int actual = Untitled.answer();\n        assertEquals(expected, actual);\n    }\n}\n","cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls *.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'`\nfi","output":"","instructions":"Reversi is a board game for two players. The board contains\n8x8 squares. The players place Black or White counters onto\nthe board, one counter per square. More information can be\nfound on Wikipedia en.wikipedia.org/wiki/Reversi?. Your task\nis to write a program that takes a current board position\ntogether with information about whose turn it is, and returns\na list of the legal moves for that player. A move is only\nlegal if it results in at least one of the opponent's\ncounters being flipped.\n\nExample input: (the final B indicates it is Black's turn)\n........\n........\n........\n...BW...\n...WB...\n........\n........\n........\nB\n\nExample output: (each zero indicates a legal move for Black)\n........\n........\n....0...\n...BW0..\n..0WB...\n...0....\n........\n........\nB\n"}}