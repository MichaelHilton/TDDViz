{"created":[2014,7,9,8,15,43],"id":"00186C53E2","language":"Java-1.8_Powermockito","exercise":"Anagrams","unit_test_framework":"junit","tab_size":4,"visible_files":{"HikerTest.java":"import org.junit.*;\nimport static org.junit.Assert.*;\n\nimport org.junit.runner.RunWith;\nimport org.powermock.modules.junit4.PowerMockRunner;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.api.mockito.PowerMockito;\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest(Config.class)\npublic class HikerTest {\n\n    @Test\n    public void life_the_universe_and_everything() {\n        PowerMockito.mockStatic(Config.class);\n        Config mocked = PowerMockito.mock(Config.class);\n        PowerMockito.when(Config.getInstance()).thenReturn(mocked);\n        PowerMockito.when(mocked.getMultiplier()).thenReturn(9);\n\n        int expected = 42;\n        int actual = new Hiker().answer();\n        assertEquals(expected, actual);\n    }\n}","Config.java":"\npublic final class Config {\n\n    public static Config getInstance() {\n        return singleton;\n    }\n\n    public int getMultiplier() {\n        return 9;\n    }\n\n    private Config() {\n    }\n\n    private static Config singleton = new Config();\n}\n","Hiker.java":"\npublic class Hiker {\n\n    public int answer() {\n        return 6 * Config.getInstance().getMultiplier();\n    }\n\n}\n","cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls *.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'`\nfi","output":"","instructions":"Write a program to generate all potential \nanagrams of an input string.\n\nFor example, the potential anagrams of \"biro\" are\n\nbiro bior brio broi boir bori\nibro ibor irbo irob iobr iorb\nrbio rboi ribo riob roib robi\nobir obri oibr oirb orbi orib\n"}}