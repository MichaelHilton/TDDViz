{"created":[2014,6,12,3,26,58],"id":"003EE1E22C","language":"Python-unittest","exercise":"Verbal","unit_test_framework":"python_unittest","tab_size":4,"visible_files":{"tennis.py":"# -*- coding: utf-8 -*-\n\nclass TennisGameDefactored1:\n\n    def __init__(self, player1Name, player2Name):\n        self.player1Name = player1Name\n        self.player2Name = player2Name\n        self.p1points = 0\n        self.p2points = 0\n        \n    def won_point(self, playerName):\n        if playerName == self.player1Name:\n            self.p1points += 1\n        else:\n            self.p2points += 1\n    \n    def score(self):\n        result = \"\"\n        tempScore=0\n        if (self.p1points==self.p2points):\n            result = {\n                0 : \"Love-All\",\n                1 : \"Fifteen-All\",\n                2 : \"Thirty-All\",\n                3 : \"Forty-All\",\n            }.get(self.p1points, \"Deuce\")\n        elif (self.p1points>=4 or self.p2points>=4):\n            minusResult = self.p1points-self.p2points\n            if (minusResult==1):\n                result =\"Advantage \" + self.player1Name\n            elif (minusResult ==-1):\n                result =\"Advantage \" + self.player2Name\n            elif (minusResult>=2):\n                result = \"Win for \" + self.player1Name\n            else:\n                result =\"Win for \" + self.player2Name\n        else:\n            for i in range(1,3):\n                if (i==1):\n                    tempScore = self.p1points\n                else:\n                    result+=\"-\"\n                    tempScore = self.p2points\n                result += {\n                    0 : \"Love\",\n                    1 : \"Fifteen\",\n                    2 : \"Thirty\",\n                    3 : \"Forty\",\n                }[tempScore]\n        return result\n\n\nclass TennisGameDefactored2:\n    def __init__(self, player1Name, player2Name):\n        self.player1Name = player1Name\n        self.player2Name = player2Name\n        self.p1points = 0\n        self.p2points = 0\n        \n    def won_point(self, playerName):\n        if playerName == self.player1Name:\n            self.P1Score()\n        else:\n            self.P2Score()\n    \n    def score(self):\n        result = \"\"\n        if (self.p1points == self.p2points and self.p1points < 4):\n            if (self.p1points==0):\n                result = \"Love\"\n            if (self.p1points==1):\n                result = \"Fifteen\"\n            if (self.p1points==2):\n                result = \"Thirty\"\n            if (self.p1points==3):\n                result = \"Forty\"\n            result += \"-All\"\n        if (self.p1points==self.p2points and self.p1points>3):\n            result = \"Deuce\"\n        \n        P1res = \"\"\n        P2res = \"\"\n        if (self.p1points > 0 and self.p2points==0):\n            if (self.p1points==1):\n                P1res = \"Fifteen\"\n            if (self.p1points==2):\n                P1res = \"Thirty\"\n            if (self.p1points==3):\n                P1res = \"Forty\"\n            \n            P2res = \"Love\"\n            result = P1res + \"-\" + P2res\n        if (self.p2points > 0 and self.p1points==0):\n            if (self.p2points==1):\n                P2res = \"Fifteen\"\n            if (self.p2points==2):\n                P2res = \"Thirty\"\n            if (self.p2points==3):\n                P2res = \"Forty\"\n            \n            P1res = \"Love\"\n            result = P1res + \"-\" + P2res\n        \n        \n        if (self.p1points>self.p2points and self.p1points < 4):\n            if (self.p1points==2):\n                P1res=\"Thirty\"\n            if (self.p1points==3):\n                P1res=\"Forty\"\n            if (self.p2points==1):\n                P2res=\"Fifteen\"\n            if (self.p2points==2):\n                P2res=\"Thirty\"\n            result = P1res + \"-\" + P2res\n        if (self.p2points>self.p1points and self.p2points < 4):\n            if (self.p2points==2):\n                P2res=\"Thirty\"\n            if (self.p2points==3):\n                P2res=\"Forty\"\n            if (self.p1points==1):\n                P1res=\"Fifteen\"\n            if (self.p1points==2):\n                P1res=\"Thirty\"\n            result = P1res + \"-\" + P2res\n        \n        if (self.p1points > self.p2points and self.p2points >= 3):\n            result = \"Advantage \" + self.player1Name\n        \n        if (self.p2points > self.p1points and self.p1points >= 3):\n            result = \"Advantage \" + self.player2Name\n        \n        if (self.p1points>=4 and self.p2points>=0 and (self.p1points-self.p2points)>=2):\n            result = \"Win for \" + self.player1Name\n        if (self.p2points>=4 and self.p1points>=0 and (self.p2points-self.p1points)>=2):\n            result = \"Win for \" + self.player2Name\n        return result\n    \n    def SetP1Score(self, number):\n        for i in range(number):\n            self.P1Score()\n    \n    def SetP2Score(self, number):\n        for i in range(number):\n            self.P2Score()\n    \n    def P1Score(self):\n        self.p1points +=1\n    \n    \n    def P2Score(self):\n        self.p2points +=1\n        \nclass TennisGameDefactored3:\n    def __init__(self, player1Name, player2Name):\n        self.p1N = player1Name\n        self.p2N = player2Name\n        self.p1 = 0\n        self.p2 = 0\n        \n    def won_point(self, n):\n        if n == self.p1N:\n            self.p1 += 1\n        else:\n            self.p2 += 1\n    \n    def score(self):\n        if (self.p1 < 4 and self.p2 < 4):\n            p = [\"Love\", \"Fifteen\", \"Thirty\", \"Forty\"]\n            s = p[self.p1]\n            return s + \"-All\" if (self.p1 == self.p2) else s + \"-\" + p[self.p2]\n        else:\n            if (self.p1 == self.p2):\n                return \"Deuce\"\n            s = self.p1N if self.p1 > self.p2 else self.p2N\n            return \"Advantage \" + s if ((self.p1-self.p2)*(self.p1-self.p2) == 1) else \"Win for \" + s\n\n# NOTE: You must change this to point at the one of the three examples that you're working on!\nTennisGame = TennisGameDefactored1\n","test_tennis.py":"# -*- coding: utf-8 -*-\n\nimport unittest\n\nfrom tennis import TennisGame\n\ntest_cases = [\n    (0, 0, \"Love-All\", 'player1', 'player2'),\n    (1, 1, \"Fifteen-All\", 'player1', 'player2'),\n    (2, 2, \"Thirty-All\", 'player1', 'player2'),\n    (3, 3, \"Forty-All\", 'player1', 'player2'),\n    (4, 4, \"Deuce\", 'player1', 'player2'),\n\n    (1, 0, \"Fifteen-Love\", 'player1', 'player2'),\n    (0, 1, \"Love-Fifteen\", 'player1', 'player2'),\n    (2, 0, \"Thirty-Love\", 'player1', 'player2'),\n    (0, 2, \"Love-Thirty\", 'player1', 'player2'),\n    (3, 0, \"Forty-Love\", 'player1', 'player2'),\n    (0, 3, \"Love-Forty\", 'player1', 'player2'),\n    (4, 0, \"Win for player1\", 'player1', 'player2'),\n    (0, 4, \"Win for player2\", 'player1', 'player2'),\n\n    (2, 1, \"Thirty-Fifteen\", 'player1', 'player2'),\n    (1, 2, \"Fifteen-Thirty\", 'player1', 'player2'),\n    (3, 1, \"Forty-Fifteen\", 'player1', 'player2'),\n    (1, 3, \"Fifteen-Forty\", 'player1', 'player2'),\n    (4, 1, \"Win for player1\", 'player1', 'player2'),\n    (1, 4, \"Win for player2\", 'player1', 'player2'),\n\n    (3, 2, \"Forty-Thirty\", 'player1', 'player2'),\n    (2, 3, \"Thirty-Forty\", 'player1', 'player2'),\n    (4, 2, \"Win for player1\", 'player1', 'player2'),\n    (2, 4, \"Win for player2\", 'player1', 'player2'),\n\n    (4, 3, \"Advantage player1\", 'player1', 'player2'),\n    (3, 4, \"Advantage player2\", 'player1', 'player2'),\n    (5, 4, \"Advantage player1\", 'player1', 'player2'),\n    (4, 5, \"Advantage player2\", 'player1', 'player2'),\n    (15, 14, \"Advantage player1\", 'player1', 'player2'),\n    (14, 15, \"Advantage player2\", 'player1', 'player2'),\n\n    (6, 4, 'Win for player1', 'player1', 'player2'), \n    (4, 6, 'Win for player2', 'player1', 'player2'), \n    (16, 14, 'Win for player1', 'player1', 'player2'), \n    (14, 16, 'Win for player2', 'player1', 'player2'), \n\n    (6, 4, 'Win for One', 'One', 'player2'),\n    (4, 6, 'Win for Two', 'player1', 'Two'), \n    (6, 5, 'Advantage One', 'One', 'player2'),\n    (5, 6, 'Advantage Two', 'player1', 'Two'), \n    \n    ]\n\ndef play_game(p1Points, p2Points, p1Name, p2Name):\n    game = TennisGame(p1Name, p2Name)\n    for i in range(max(p1Points, p2Points)):\n        if i < p1Points:\n            game.won_point(p1Name)\n        if i < p2Points:\n            game.won_point(p2Name)\n    return game\n\nclass TestTennis(unittest.TestCase):\n     \n    def test_Score(self):\n        for testcase in test_cases:\n            (p1Points, p2Points, score, p1Name, p2Name) = testcase\n            game = play_game(p1Points, p2Points, p1Name, p2Name)\n            self.assertEquals(score, game.score())\n \nif __name__ == \"__main__\":\n    unittest.main() \n","cyber-dojo.sh":"python *test*.py\n","output":".\n----------------------------------------------------------------------\nRan 1 test in 0.022s\n\nOK\n","instructions":"\nTennis has a rather quirky scoring system, and to newcomers it \ncan be a little difficult to keep track of. The local tennis club has\nsome code that is currently being used to update the scoreboard\nwhen a player scores a point. They has recently acquired\ntwo smaller tennis clubs, and they two each have a similar piece of code.\n\nYou have just been employed by the tennis club, and your job \nis to refactor all three codebases until you are happy to\nwork with any of them. The future is uncertain, new features may\nbe needed, and you want to be thoroughly on top of your game when\nthat happens.\n\nSummary of Tennis scoring:\n1. A game is won by the first player to have won at least four points \nin total and at least two points more than the opponent.\n2. The running score of each game is described in a manner peculiar \nto tennis: scores from zero to three points are described as “love”, \n“fifteen”, “thirty”, and “forty” respectively.\n3. If at least three points have been scored by each player, and the \nscores are equal, the score is “deuce”.\n4. If at least three points have been scored by each side and a player\nhas one more point than his opponent, the score of the game is “advantage” for the player in the lead.\n"}}