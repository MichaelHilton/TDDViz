{"created":[2014,6,24,17,31,27],"id":"0A256C8EDA","language":"PHP-PHPUnit","exercise":"Reverse_Roman","unit_test_framework":"php_unit","tab_size":4,"visible_files":{"HikerTest.php":"<?php\n\nrequire_once 'Hiker.php';\n\nclass HikerTest extends PHPUnit_Framework_TestCase\n{\n    public function testLife_the_universe_and_everything()\n    {\n        $this->assertEquals(42, answer());\n    }\n}\n\n?>\n","Hiker.php":"<?php\n\nfunction answer()\n{\n    return 6 * 9;\n}\n\n?>\n","cyber-dojo.sh":"phpunit --verbose .\n","output":"","instructions":"Given a Roman number as a string (eg \"XX\") determine\nits integer value (eg 20).\n\nYou cannot write numerals like IM for 999.\nWikipedia states \"Modern Roman numerals are written by\nexpressing each digit separately starting with the\nleftmost digit and skipping any digit with a value of zero.\"\n\nExamples:\n\n   \"I\" -> 1 |    \"X\" -> 10 |    \"C\" -> 100 |    \"M\" -> 1000 \n  \"II\" -> 2 |   \"XX\" -> 20 |   \"CC\" -> 200 |   \"MM\" -> 2000 \n \"III\" -> 3 |  \"XXX\" -> 30 |  \"CCC\" -> 300 |  \"MMM\" -> 3000 \n  \"IV\" -> 4 |   \"XL\" -> 40 |   \"CD\" -> 400 | \"MMMM\" -> 4000 \n   \"V\" -> 5 |    \"L\" -> 50 |    \"D\" -> 500 | \n  \"VI\" -> 6 |   \"LX\" -> 60 |   \"DC\" -> 600 | \n \"VII\" -> 7 |  \"LXX\" -> 70 |  \"DCC\" -> 700 | \n\"VIII\" -> 8 | \"LXXX\" -> 80 | \"DCCC\" -> 800 | \n  \"IX\" -> 9 |   \"XC\" -> 90 |   \"CM\" -> 900 | \n\n \"MCMXC\" -> 1990 (\"M\" -> 1000 + \"CM\" -> 900 + \"XC\" -> 90)\n\"MMVIII\" -> 2008 (\"MM\" -> 2000 + \"VIII\" -> 8)\n  \"XCIX\" -> 99   (\"XC\" -> 90 + \"IX\" -> 9)\n \"XLVII\" -> 47   (\"XL\" -> 40 + \"VII\" -> 7)\n\n"}}