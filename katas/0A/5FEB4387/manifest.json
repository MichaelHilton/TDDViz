{"created":[2014,4,8,22,8,28],"id":"0A5FEB4387","language":"Java-JUnit","exercise":"Verbal","unit_test_framework":"junit","tab_size":4,"visible_files":{"TennisGame1.java":"\npublic class TennisGame1 {\n    \n    private int m_score1 = 0;\n    private int m_score2 = 0;\n    private String player1Name;\n    private String player2Name;\n\n    public TennisGame1(String player1Name, String player2Name) {\n        this.player1Name = player1Name;\n        this.player2Name = player2Name;\n    }\n\n    public void wonPoint(String playerName) {\n        if (playerName == \"player1\")\n            m_score1 += 1;\n        else\n            m_score2 += 1;\n    }\n\n    public String getScore() {\n        String score = \"\";\n        int tempScore=0;\n        if (m_score1==m_score2)\n        {\n            switch (m_score1)\n            {\n                case 0:\n                        score = \"Love-All\";\n                    break;\n                case 1:\n                        score = \"Fifteen-All\";\n                    break;\n                case 2:\n                        score = \"Thirty-All\";\n                    break;\n                case 3:\n                        score = \"Forty-All\";\n                    break;\n                default:\n                        score = \"Deuce\";\n                    break;\n                \n            }\n        }\n        else if (m_score1>=4 || m_score2>=4)\n        {\n            int minusResult = m_score1-m_score2;\n            if (minusResult==1) score =\"Advantage player1\";\n            else if (minusResult ==-1) score =\"Advantage player2\";\n            else if (minusResult>=2) score = \"Win for player1\";\n            else score =\"Win for player2\";\n        }\n        else\n        {\n            for (int i=1; i<3; i++)\n            {\n                if (i==1) tempScore = m_score1;\n                else { score+=\"-\"; tempScore = m_score2;}\n                switch(tempScore)\n                {\n                    case 0:\n                        score+=\"Love\";\n                        break;\n                    case 1:\n                        score+=\"Fifteen\";\n                        break;\n                    case 2:\n                        score+=\"Thirty\";\n                        break;\n                    case 3:\n                        score+=\"Forty\";\n                        break;\n                }\n            }\n        }\n        return score;\n    }\n}\n","TennisTest.java":"import static org.junit.Assert.*;\n\nimport java.util.Arrays;\nimport java.util.Collection;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.junit.runners.Parameterized;\nimport org.junit.runners.Parameterized.Parameters;\n\n@RunWith(Parameterized.class)\npublic class TennisTest {\n\n    private int player1Score;\n    private int player2Score;\n    private String expectedScore;\n\n    public TennisTest(int player1Score, int player2Score, String expectedScore) {\n        this.player1Score = player1Score;\n        this.player2Score = player2Score;\n        this.expectedScore = expectedScore;\n    }\n    \n    @Parameters\n    public static Collection<Object[]> getAllScores() {\n        return Arrays.asList(new Object[][] {\n                { 0, 0, \"Love-All\" },\n                { 1, 1, \"Fifteen-All\" },\n                { 2, 2, \"Thirty-All\"},\n                { 3, 3, \"Forty-All\"},\n                { 4, 4, \"Deuce\"},\n                \n                { 1, 0, \"Fifteen-Love\"},\n                { 0, 1, \"Love-Fifteen\"},\n                { 2, 0, \"Thirty-Love\"},\n                { 0, 2, \"Love-Thirty\"},\n                { 3, 0, \"Forty-Love\"},\n                { 0, 3, \"Love-Forty\"},\n                { 4, 0, \"Win for player1\"},\n                { 0, 4, \"Win for player2\"},\n                \n                { 2, 1, \"Thirty-Fifteen\"},\n                { 1, 2, \"Fifteen-Thirty\"},\n                { 3, 1, \"Forty-Fifteen\"},\n                { 1, 3, \"Fifteen-Forty\"},\n                { 4, 1, \"Win for player1\"},\n                { 1, 4, \"Win for player2\"},\n\n                { 3, 2, \"Forty-Thirty\"},\n                { 2, 3, \"Thirty-Forty\"},\n                { 4, 2, \"Win for player1\"},\n                { 2, 4, \"Win for player2\"},\n                \n                { 4, 3, \"Advantage player1\"},\n                { 3, 4, \"Advantage player2\"},\n                { 5, 4, \"Advantage player1\"},\n                { 4, 5, \"Advantage player2\"},\n                { 15, 14, \"Advantage player1\"},\n                { 14, 15, \"Advantage player2\"},\n\n                { 6, 4, \"Win for player1\"},\n                { 4, 6, \"Win for player2\"},\n                { 16, 14, \"Win for player1\"},\n                { 14, 16, \"Win for player2\"},\n        });\n    }\n\n    @Test\n    public void checkAllScores() {\n        // NOTE: Change this TennisGame to the version you want to refactor\n        TennisGame1 game = new TennisGame1(\"player1\", \"player2\");\n        int highestScore = Math.max(this.player1Score, this.player2Score);\n        for (int i = 0; i < highestScore; i++) {\n            if (i < this.player1Score)\n                game.wonPoint(\"player1\");\n            if (i < this.player2Score)\n                game.wonPoint(\"player2\");\n        }\n        assertEquals(this.expectedScore, game.getScore());\n    }\n}\n","cyber-dojo.sh":"javac -cp .:./junit-4.11.jar *.java \nif [ $? -eq 0 ]; then\n  java -cp .:./junit-4.11.jar org.junit.runner.JUnitCore `ls -1 *Test*.class | sed 's/\\(.*\\)\\..*/\\1/'`\nfi\n\n","output":"JUnit version 4.11-SNAPSHOT-20120416-1530\n.................................\nTime: 0.049\n\nOK (33 tests)\n\n","instructions":"\nTennis has a rather quirky scoring system, and to newcomers it \ncan be a little difficult to keep track of. The local tennis club has\nsome code that is currently being used to update the scoreboard\nwhen a player scores a point. They has recently acquired\ntwo smaller tennis clubs, and they two each have a similar piece of code.\n\nYou have just been employed by the tennis club, and your job \nis to refactor all three codebases until you are happy to\nwork with any of them. The future is uncertain, new features may\nbe needed, and you want to be thoroughly on top of your game when\nthat happens.\n\nSummary of Tennis scoring:\n1. A game is won by the first player to have won at least four points \nin total and at least two points more than the opponent.\n2. The running score of each game is described in a manner peculiar \nto tennis: scores from zero to three points are described as “love”, \n“fifteen”, “thirty”, and “forty” respectively.\n3. If at least three points have been scored by each player, and the \nscores are equal, the score is “deuce”.\n4. If at least three points have been scored by each side and a player\nhas one more point than his opponent, the score of the game is “advantage” for the player in the lead.\n","TennisGame2.java":"\npublic class TennisGame2\n{\n    public int P1point = 0;\n    public int P2point = 0;\n    \n    public String P1res = \"\";\n    public String P2res = \"\";\n    private String player1Name;\n    private String player2Name;\n\n    public TennisGame2(String player1Name, String player2Name) {\n        this.player1Name = player1Name;\n        this.player2Name = player2Name;\n    }\n\n    public String getScore(){\n        String score = \"\";\n        if (P1point == P2point && P1point < 4)\n        {\n            if (P1point==0)\n                score = \"Love\";\n            if (P1point==1)\n                score = \"Fifteen\";\n            if (P1point==2)\n                score = \"Thirty\";\n            if (P1point==3)\n                score = \"Forty\";\n            score += \"-All\";\n        }\n        if (P1point==P2point && P1point>3)\n            score = \"Deuce\";\n        \n        if (P1point > 0 && P2point==0)\n        {\n            if (P1point==1)\n                P1res = \"Fifteen\";\n            if (P1point==2)\n                P1res = \"Thirty\";\n            if (P1point==3)\n                P1res = \"Forty\";\n            \n            P2res = \"Love\";\n            score = P1res + \"-\" + P2res;\n        }\n        if (P2point > 0 && P1point==0)\n        {\n            if (P2point==1)\n                P2res = \"Fifteen\";\n            if (P2point==2)\n                P2res = \"Thirty\";\n            if (P2point==3)\n                P2res = \"Forty\";\n            \n            P1res = \"Love\";\n            score = P1res + \"-\" + P2res;\n        }\n        \n        if (P1point>P2point && P1point < 4)\n        {\n            if (P1point==2)\n                P1res=\"Thirty\";\n            if (P1point==3)\n                P1res=\"Forty\";\n            if (P2point==1)\n                P2res=\"Fifteen\";\n            if (P2point==2)\n                P2res=\"Thirty\";\n            score = P1res + \"-\" + P2res;\n        }\n        if (P2point>P1point && P2point < 4)\n        {\n            if (P2point==2)\n                P2res=\"Thirty\";\n            if (P2point==3)\n                P2res=\"Forty\";\n            if (P1point==1)\n                P1res=\"Fifteen\";\n            if (P1point==2)\n                P1res=\"Thirty\";\n            score = P1res + \"-\" + P2res;\n        }\n        \n        if (P1point > P2point && P2point >= 3)\n        {\n            score = \"Advantage player1\";\n        }\n        \n        if (P2point > P1point && P1point >= 3)\n        {\n            score = \"Advantage player2\";\n        }\n        \n        if (P1point>=4 && P2point>=0 && (P1point-P2point)>=2)\n        {\n            score = \"Win for player1\";\n        }\n        if (P2point>=4 && P1point>=0 && (P2point-P1point)>=2)\n        {\n            score = \"Win for player2\";\n        }\n        return score;\n    }\n    \n    public void SetP1Score(int number){\n        \n        for (int i = 0; i < number; i++)\n        {\n            P1Score();\n        }\n            \n    }\n    \n    public void SetP2Score(int number){\n        \n        for (int i = 0; i < number; i++)\n        {\n            P2Score();\n        }\n            \n    }\n    \n    public void P1Score(){\n        P1point++;\n    }\n    \n    public void P2Score(){\n        P2point++;\n    }\n\n    public void wonPoint(String player) {\n        if (player == \"player1\")\n            P1Score();\n        else\n            P2Score();\n    }\n}","TennisGame3.java":"\npublic class TennisGame3 {\n    \n    private int p2;\n    private int p1;\n    private String p1N;\n    private String p2N;\n\n    public TennisGame3(String p1N, String p2N) {\n        this.p1N = p1N;\n        this.p2N = p2N;\n    }\n\n    public String getScore() {\n        String s;\n        if (p1 < 4 && p2 < 4) {\n            String[] p = new String[]{\"Love\", \"Fifteen\", \"Thirty\", \"Forty\"}; \n            s = p[p1];\n            return (p1 == p2) ? s + \"-All\" : s + \"-\" + p[p2];\n        } else {\n            if (p1 == p2)\n                return \"Deuce\";\n            s = p1 > p2 ? p1N : p2N;\n            return ((p1-p2)*(p1-p2) == 1) ? \"Advantage \" + s : \"Win for \" + s;\n        }\n    }\n    \n    public void wonPoint(String playerName) {\n        if (playerName == \"player1\")\n            this.p1 += 1;\n        else\n            this.p2 += 1;\n        \n    }\n\n}\n"}}