{"created":[2014,6,3,14,45,25],"id":"0A276AFB78","language":"C-assert","exercise":"Number_Chains","unit_test_framework":"cassert","tab_size":4,"visible_files":{"untitled.c":"#include \"untitled.h\"\r\n\r\nint hhg(void)\r\n{\r\n    return 42;\r\n}\r\n\r\n","untitled.h":"#ifndef UNTITLED_INCLUDED\n#define UNTITLED_INCLUDED\n\nint hhg(void);\n\n#endif\n\n","makefile":"run.tests.output : makefile run.tests\n\t./run.tests\n\nrun.tests : makefile *.c *.h\n\tgcc -Wall -Wextra -Werror -O -std=c99 *.c -o run.tests\n","untitled.tests.c":"#include \"untitled.h\"\n#include <assert.h>\n#include <stdio.h>\n\nstatic void example(void)\n{\n    assert(hhg() == 6*9);\n}\n\nint main(void)\n{\n    example();\n    puts(\"All tests passed\");\n}\n\n","cyber-dojo.sh":"LANG=C\nmake\n","output":"","instructions":"Given a number, we can form a number chain by\n\n1) arranging its digits in descending order\n2) arranging its digits in ascending order\n3) subtracting the number obtained in (2) from the number\n   obtained (1) to form a new number\n4) and repeat these steps unless the new number has already\n   appeared in the chain\n   \nNote that 0 is a permitted digit. The number of distinct\nnumbers in the chain is the length of the chain. You are to\nwrite a program that reads numbers and outputs the number\nchain and the length of that chain for each number read.\n\nInput and Output\n----------------\nThe input consists of a positive number, less than 10^9.\nThe output consists of the number chain generated by the\ninput number, followed by its lengths exactly in the format\nindicated below.\n\nExample-1\n---------\nInput\n123456789\n\nOutput\nOriginal number was 123456789\n987654321 - 123456789 = 864197532\n987654321 - 123456789 = 864197532\nChain length 2\n\nExample-2\n---------\nInput\n1234\n\nOutput\nOriginal number was 1234\n4321 - 1234 = 3087\n8730 - 378 = 8352\n8532 - 2358 = 6174\n7641 - 1467 = 6174\nChain length 4\n\nExample-3\n---------\nInput\n444\n\nOutput\nOriginal number was 444\n444 - 444 = 0\n0 - 0 = 0\nChain length 2\n\n\n[Source: http://uva.onlinejudge.org/]"}}